package views

import "github.com/RowMur/office-games/internal/db"

templ Page(contents templ.Component, user *db.User) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<script src="https://unpkg.com/htmx.org@2.0.2" integrity="sha384-Y7hw+L/jvKeWIRRkqWYfPcvVxHzVzn5REgzbawhxAuQGwX1XWe70vji+VSeHOThJ" crossorigin="anonymous"></script>
			<title>Office Games</title>
			<meta name="description" content="Office Games - A platform to play and manage office games with your colleagues."/>
			<style>
				html {
					scrollbar-gutter: stable;
				}
			</style>
			<script src="/static/multiselect.js"></script>
			<link rel="stylesheet" href="/static/output.css"/>
			<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png"/>
			<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png"/>
			<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png"/>
			<link rel="manifest" href="/site.webmanifest"/>
		</head>
		<body class="bg-back text-content w-11/12 max-w-lg mx-auto h-svh gutte">
			@Heading(user)
			@contents
			<hr/>
			<footer class="text-center py-4">
				<p>
					Found an issue? <a href="https://github.com/RowMur/office-games/issues" class="underline text-accent">Report</a>
				</p>
			</footer>
		</body>
	</html>
}

templ Heading(user *db.User) {
	<nav class="bg-light p-6 rounded-b-3xl flex justify-between items-center">
		<h1 class="text-2xl font-bold"><a href="/">Office Games</a></h1>
		if user != nil {
			<a href="/me">
				<div class="w-12 h-12 grid place-items-center border-accent rounded-full border-2">
					{ string(user.Username[0]) }
				</div>
			</a>
		}
	</nav>
}

type FormErrors map[string]string
type FormData map[string]string

templ formField(name string, display string, inputType string, data FormData, errors FormErrors) {
	<label for={ name } class="block">{ display }:</label>
	<input
		id={ name }
		name={ name }
		type={ inputType }
		value={ data[name] }
		class="text-black w-full"
	/>
	if errors[name] != "" {
		<p class="text-red-500">{ errors[name] }</p>
	}
}

type ListSectionItem struct {
	Name string
	URL  string
}

type SecondaryLink struct {
	Name string
	URL  string
}

templ ListSection(title string, items []ListSectionItem, secondaryLink *SecondaryLink) {
	<section>
		@SectionHeading(title, secondaryLink)
		<ul class="mt-2 flex flex-wrap gap-2">
			for _, item := range items {
				<a href={ templ.SafeURL(item.URL) } class="bg-light p-2 pt-6 pr-6 w-fit rounded grow">
					<li>{ item.Name }</li>
				</a>
			}
		</ul>
	</section>
}

templ SectionHeading(title string, secondaryLink *SecondaryLink) {
	<div class="flex justify-between">
		<h3 class="text-lg font-semibold">{ title }</h3>
		if secondaryLink != nil {
			<a href={ templ.SafeURL(secondaryLink.URL) } class="opacity-70 hover:underline">{ secondaryLink.Name }</a>
		}
	</div>
}

type Crumb struct {
	Name string
	URL  string
}

templ Breadcrumbs(crumbs []Crumb) {
	<nav class="opacity-70">
		for _, crumb := range crumbs {
			<a href={ templ.SafeURL(crumb.URL) } class="hover:underline">{ crumb.Name } &gt; </a>
		}
	</nav>
}
