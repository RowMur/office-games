package components

import (
	"fmt"
	"github.com/RowMur/office-table-tennis/internal/db"
	"github.com/RowMur/office-table-tennis/internal/officeprocessor"
)

templ Match(match db.Match, showApprovalState bool, o *officeprocessor.Office) {
	<li class="bg-light rounded p-4">
		<div class="flex gap-3">
			<div class="text-center">
				<p class="font-semibold">W</p>
			</div>
			<div class="min-w-0 grow">
				@MatchPlayerList(match.Winners(), true, o, match)
				@MatchPlayerList(match.Losers(), false, o, match)
			</div>
			if showApprovalState {
				<div>
					@MatchApprovalState(match.IsApprovedByWinners())
					@MatchApprovalState(match.IsApprovedByLosers())
				</div>
			}
		</div>
		<p class="opacity-70 mt-2 flex flex-wrap gap-2 text-xs">
			<span>
				{ match.CreatedAt.Format("02/01/06") }
			</span>
			if match.IsHandicap {
				<span>Handicap Match</span>
			}
			<span>
				Created by: { match.Creator.Username }
			</span>
			if match.Note != "" {
				<span>
					Note: { match.Note }
				</span>
			}
		</p>
	</li>
}

templ MatchPlayerList(players []db.MatchParticipant, isWinners bool, o *officeprocessor.Office, match db.Match) {
	{{
		class := "text-ellipsis text-nowrap overflow-hidden"
		if isWinners {
			class += " font-semibold"
		}
	}}
	<p class={ class }>
		@ListOfUsers(players, o, match)
	</p>
}

templ MatchApprovalState(isApproved bool) {
	<p class="text-ellipsis text-nowrap overflow-hidden text-right">
		if isApproved {
			Approved
		} else {
			Pending
		}
	</p>
}

templ ListOfUsers(users []db.MatchParticipant, g *officeprocessor.Office, match db.Match) {
	for i, user := range users {
		if i > 0 {
			, 
		}
		{{
			dir := "+"
			var mp *officeprocessor.ProcessedMatchParticipant
			if g != nil {
				m := g.GetMatch(match.ID)
				if m != nil {
					if m.Participants != nil {
						mp = m.Participants[user.UserID]
						if !mp.Win {
							dir = "-"
						}
					}
				}
			}
		}}
		{ user.User.Username }
		if mp != nil {
			({ dir }{ fmt.Sprintf("%d", mp.PointsApplied) })
		}
	}
}
