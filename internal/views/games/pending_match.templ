package games

import (
	"fmt"
	"github.com/RowMur/office-games/internal/db"
	"github.com/RowMur/office-games/internal/views/components"
	"github.com/RowMur/office-games/internal/views/layout"
	"strconv"
)

templ PendingMatchPage(game db.Game, office db.Office, match db.Match, user *db.User) {
	@layout.Base(user) {
		<main class="mx-6 my-8">
			@components.Breadcrumbs([]components.Crumb{
				{Name: office.Name, URL: office.Link()},
				{Name: game.Name, URL: game.Link()},
				{Name: "Pending Matches", URL: game.Link() + "/pending"},
				{Name: "Match"},
			})
			<h2 class="text-2xl font-semibold mt-4">Match of { game.Name } &#64; { office.Name }</h2>
			<p class="opacity-70 flex flex-wrap [&>span]:mr-2">
				<span>
					Created by: { match.Creator.Username }
				</span>
				if match.Note != "" {
					<span>
						Note: { match.Note }
					</span>
				}
			</p>
			<div class="flex justify-evenly my-4 gap-4">
				<div class="grow">
					<h4 class="text-lg font-semibold mb-2">Winners</h4>
					<ul class="flex flex-col gap-1">
						for _, winner := range match.Winners() {
							<li class="flex items-center">
								<div
									if match.IsApprovedByUser(winner.UserID) {
										class="bg-green-500 size-2 inline-block mr-1 rounded-full"
									} else {
										class="bg-accent size-2 inline-block mr-1 rounded-full"
									}
								></div>
								{ winner.User.Username }
							</li>
						}
					</ul>
				</div>
				<div class="grow">
					<h4 class="text-lg font-semibold mb-2">Losers</h4>
					<ul class="flex flex-col gap-1">
						for _, loser := range match.Losers() {
							<li class="flex items-center">
								<div
									if match.IsApprovedByUser(loser.UserID) {
										class="bg-green-500 size-2 inline-block mr-1 rounded-full"
									} else {
										class="bg-accent size-2 inline-block mr-1 rounded-full"
									}
								></div>
								{ loser.User.Username }
							</li>
						}
					</ul>
				</div>
			</div>
			<div class="flex gap-4">
				{{ baseUrl := fmt.Sprintf("./%s", strconv.Itoa(int(match.ID))) }}
				if user.ID == match.CreatorID {
					<button
						hx-delete={ baseUrl + "/delete" }
						hx-confirm="Are you sure you want to delete this match?"
						class="bg-red-500 px-4 py-1 rounded my-4"
					>
						Delete
					</button>
				}
				<button hx-get={ baseUrl + "/approve" } hx-swap="none" class="bg-accent text-light px-4 py-1 rounded my-4">Approve</button>
			</div>
			@MatchApproveError("")
		</main>
	}
}

templ MatchApproveError(err string) {
	{{
		id := "approve-error"
	}}
	<div id={ id } hx-swap-oob="true" hx-select={ id }>
		if err != "" {
			<p class="text-red-500 text-center">{ err }</p>
		}
	</div>
}
