package games

import (
	"fmt"
	"github.com/RowMur/office-games/internal/db"
	"github.com/RowMur/office-games/internal/gameprocessor"
	"github.com/RowMur/office-games/internal/views/components"
	"github.com/RowMur/office-games/internal/views/layout"
	"strconv"
)

templ StatsPage(game db.Game, office db.Office, user *db.User, processedGame gameprocessor.Game) {
	@layout.Base(user) {
		<main class="mx-6 my-8">
			@components.Breadcrumbs([]components.Crumb{
				{Name: office.Name, URL: office.Link()},
				{Name: game.Name, URL: game.Link()},
				{Name: "Stats"},
			})
			@GamePageHeading(GamePageHeadingProps{
				Game:   game,
				Office: office,
			})
			<section class="my-6">
				@components.SectionHeading("Game Stats", nil)
				<ul class="flex flex-col gap-2">
					@gameStats(processedGame)
				</ul>
			</section>
			{{
	thisPlayer := processedGame.GetPlayer(user.ID)
			}}
			if thisPlayer != nil {
				<section class="my-6">
					<div class="flex gap-4 mb-2 items-center">
						<h3 class="text-lg font-semibold">Player Stats</h3>
						<select name="player" class="bg-back px-2 py-1 rounded-md" hx-trigger="change" hx-post={ game.Link() + "/stats" } hx-swap="outerHTML" hx-target="#player-stats">
							for _, player := range office.Players {
								if !player.NonPlayer {
									<option
										value={ strconv.Itoa(int(player.ID)) }
										if user.ID == player.ID {
											selected
										}
									>{ player.Username }</option>
								}
							}
						</select>
					</div>
					@PlayerStats(processedGame, *thisPlayer)
				</section>
			}
		</main>
	}
}

templ gameStats(game gameprocessor.Game) {
	@statRow("Games played", strconv.Itoa(game.MatchesPlayed()))
	@statRow("Most games played by player", strconv.Itoa(game.MostPlayedPlayer().MatchesPlayed())+" ("+game.MostPlayedPlayer().User.Username+")")
	@statRow("Highest points (current)", game.HighestRankedPlayer().User.Username+" ("+strconv.Itoa(game.HighestRankedPlayer().Points)+")")
	@statRow("Highest points (all time)", game.RecordElo().User.Username+" ("+strconv.Itoa(game.RecordElo().RecordPoints)+")")
	@statRow("Most common teammates", game.MostCommonPairing().Print())
	@statRow("Most common opponents", game.MostCommonOpposingPairing().Print())
}

templ PlayerStats(game gameprocessor.Game, player gameprocessor.Player) {
	<ul id="player-stats" class="flex flex-col gap-2">
		@statRow("Games played", strconv.Itoa(player.MatchesPlayed()))
		@statRow("Wins", strconv.Itoa(player.WinCount))
		@statRow("Losses", strconv.Itoa(player.LossCount))
		@statRow("Win rate", fmt.Sprintf("%.2f", player.Percentage()))
		@statRow("Current points", strconv.Itoa(player.Points))
		@statRow("Highest points", fmt.Sprintf("%d (%s)", player.RecordPoints, player.RecordPointsDate.Format("02/01/06")))
		@statRow("Most common teamate", game.MostCommonPairingForPlayer(player).PrintOtherPlayer(player))
		@statRow("Most common opponent", game.MostCommonOpponentForPlayer(player).PrintOtherPlayer(player))
	</ul>
}

templ statRow(label string, value string) {
	<li class="flex justify-between gap-2">
		<span>{ label }</span>
		<span class="text-right">{ value }</span>
	</li>
}
