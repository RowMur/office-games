package views

import (
	"github.com/RowMur/office-games/internal/db"
	"github.com/RowMur/office-games/internal/views/components"
	"github.com/RowMur/office-games/internal/views/layout"
)

templ MePage(user *db.User, data UserDetailsFormData, errors UserDetailsFormErrors) {
	@layout.Base(user) {
		<main class="grid place-items-center mt-4">
			<div class="flex flex-col gap-4">
				<section>
					<h2 class="text-xl pb-4">Details</h2>
					@UserDetailsForm(data, errors, nil)
				</section>
				<a href="/sign-out" class="underline text-center my-4">Sign out</a>
			</div>
		</main>
	}
}

type UserDetailsFormData struct {
	Username string
	Email    string
}

type UserDetailsFormErrors struct {
	Username string
	Email    string
}

templ UserDetailsForm(data UserDetailsFormData, errors UserDetailsFormErrors, didUpdateSuccessfully *bool) {
	<form hx-post="/me" hx-swap="outerHTML">
		@components.FormField(components.FormFieldProps{
			Name:      "username",
			Label:     "Username",
			Value:     data.Username,
			Error:     errors.Username,
			InputType: "text",
		})
		@components.FormField(components.FormFieldProps{
			Name:      "email",
			Label:     "Email",
			Value:     data.Email,
			Error:     errors.Email,
			InputType: "email",
		})
		<button type="submit" class="bg-accent text-light block mx-auto mt-4 px-4 py-1">Save</button>
		if didUpdateSuccessfully == nil {
		} else if *didUpdateSuccessfully {
			<p class="text-green-500 text-center">Updated successfully</p>
		} else {
			<p class="text-red-500 text-center">Failed to update</p>
		}
	</form>
}
